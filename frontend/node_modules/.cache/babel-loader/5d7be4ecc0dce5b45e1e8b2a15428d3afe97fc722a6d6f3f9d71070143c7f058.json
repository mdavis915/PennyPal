{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marid\\\\Downloads\\\\CIS4905\\\\piggy-bank\\\\frontend\\\\src\\\\components\\\\Goals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GoalsForm() {\n  _s();\n  const [goalName, setGoalName] = useState(\"\");\n  const [goalAmount, setGoalAmount] = useState(\"\");\n  const [currentProgress, setCurrentProgress] = useState(\"\"); // New state for current progress\n  const [goals, setGoals] = useState([]); // Local state for storing fetched goals\n\n  // Function to fetch goals from the server\n  const fetchGoals = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/goals\");\n      if (!response.ok) throw new Error(\"Failed to fetch goals\");\n      const data = await response.json();\n      setGoals(data); // Update state with the fetched goals\n    } catch (error) {\n      console.error(\"Error fetching goals:\", error);\n    }\n  };\n\n  // Fetch goals on component mount\n  useEffect(() => {\n    fetchGoals();\n  }, []);\n\n  // Function to create a new goal\n  const handleCreateGoal = async () => {\n    if (!goalName || !goalAmount) {\n      alert(\"Please enter both goal name and amount.\");\n      return;\n    }\n    const newGoal = {\n      goal_name: goalName,\n      goal_amount: parseFloat(goalAmount),\n      current_progress: parseFloat(currentProgress) || 0 // Include progress\n    };\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/set-goal\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newGoal)\n      });\n      if (response.ok) {\n        alert(\"Goal created successfully!\");\n        setGoalName(\"\");\n        setGoalAmount(\"\");\n        setCurrentProgress(\"\"); // Reset progress input\n        fetchGoals(); // Refresh goal list after adding a new goal\n      } else {\n        alert(\"Failed to create goal.\");\n      }\n    } catch (error) {\n      console.error(\"Error creating goal:\", error);\n    }\n  };\n\n  // Function to calculate the progress percentage\n  const calculateProgress = goal => {\n    return goal.current_progress / goal.goal_amount * 100 || 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Goal Name\",\n        value: goalName,\n        onChange: e => setGoalName(e.target.value),\n        className: \"goal-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"currency-symbol\",\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Goal Amount\",\n        value: goalAmount,\n        onChange: e => setGoalAmount(e.target.value),\n        className: \"goal-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"currency-symbol\",\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Current Progress\",\n        value: currentProgress,\n        onChange: e => setCurrentProgress(e.target.value),\n        className: \"goal-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateGoal,\n      className: \"goal-button\",\n      children: \"Set Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goals-list\",\n      children: goals.length > 0 ? goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goal-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: goal.goal_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Goal Amount: $\", goal.goal_amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Progress: $\", goal.current_progress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            style: {\n              width: `${calculateProgress(goal)}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No goals set yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(GoalsForm, \"IXydYSqU9peGXSKgakh45OgvuT8=\");\n_c = GoalsForm;\nexport default GoalsForm;\nvar _c;\n$RefreshReg$(_c, \"GoalsForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GoalsForm","_s","goalName","setGoalName","goalAmount","setGoalAmount","currentProgress","setCurrentProgress","goals","setGoals","fetchGoals","response","fetch","ok","Error","data","json","error","console","handleCreateGoal","alert","newGoal","goal_name","goal_amount","parseFloat","current_progress","method","headers","body","JSON","stringify","calculateProgress","goal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","index","style","width","_c","$RefreshReg$"],"sources":["C:/Users/marid/Downloads/CIS4905/piggy-bank/frontend/src/components/Goals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction GoalsForm() {\r\n  const [goalName, setGoalName] = useState(\"\");\r\n  const [goalAmount, setGoalAmount] = useState(\"\");\r\n  const [currentProgress, setCurrentProgress] = useState(\"\"); // New state for current progress\r\n  const [goals, setGoals] = useState([]); // Local state for storing fetched goals\r\n\r\n  // Function to fetch goals from the server\r\n  const fetchGoals = async () => {\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/goals\");\r\n      if (!response.ok) throw new Error(\"Failed to fetch goals\");\r\n\r\n      const data = await response.json();\r\n      setGoals(data); // Update state with the fetched goals\r\n    } catch (error) {\r\n      console.error(\"Error fetching goals:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch goals on component mount\r\n  useEffect(() => {\r\n    fetchGoals();\r\n  }, []);\r\n\r\n  // Function to create a new goal\r\n  const handleCreateGoal = async () => {\r\n    if (!goalName || !goalAmount) {\r\n      alert(\"Please enter both goal name and amount.\");\r\n      return;\r\n    }\r\n\r\n    const newGoal = {\r\n      goal_name: goalName,\r\n      goal_amount: parseFloat(goalAmount),\r\n      current_progress: parseFloat(currentProgress) || 0, // Include progress\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/set-goal\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newGoal),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Goal created successfully!\");\r\n        setGoalName(\"\");\r\n        setGoalAmount(\"\");\r\n        setCurrentProgress(\"\"); // Reset progress input\r\n        fetchGoals(); // Refresh goal list after adding a new goal\r\n      } else {\r\n        alert(\"Failed to create goal.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating goal:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to calculate the progress percentage\r\n  const calculateProgress = (goal) => {\r\n    return ((goal.current_progress / goal.goal_amount) * 100) || 0;\r\n  };\r\n\r\n  return (\r\n    <div className=\"goal-container\">\r\n      <h2>Create a New Goal</h2>\r\n\r\n      {/* Goal Name Input */}\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Goal Name\"\r\n          value={goalName}\r\n          onChange={(e) => setGoalName(e.target.value)}\r\n          className=\"goal-input\"\r\n        />\r\n      </div>\r\n\r\n      {/* Goal Amount Input */}\r\n      <div className=\"input-group\">\r\n        <span className=\"currency-symbol\">$</span>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Goal Amount\"\r\n          value={goalAmount}\r\n          onChange={(e) => setGoalAmount(e.target.value)}\r\n          className=\"goal-input\"\r\n        />\r\n      </div>\r\n\r\n      {/* Current Progress Input */}\r\n      <div className=\"input-group\">\r\n        <span className=\"currency-symbol\">$</span>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Current Progress\"\r\n          value={currentProgress}\r\n          onChange={(e) => setCurrentProgress(e.target.value)}\r\n          className=\"goal-input\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleCreateGoal} className=\"goal-button\">\r\n        Set Goal\r\n      </button>\r\n\r\n      {/* Display Goals List */}\r\n      <h3>My Goals</h3>\r\n      <div className=\"goals-list\">\r\n        {goals.length > 0 ? (\r\n          goals.map((goal, index) => (\r\n            <div className=\"goal-card\" key={index}>\r\n              <h4>{goal.goal_name}</h4>\r\n              <p>Goal Amount: ${goal.goal_amount}</p>\r\n              <p>Current Progress: ${goal.current_progress}</p>\r\n              {/* Progress Bar */}\r\n              <div className=\"progress-bar\">\r\n                <div\r\n                  className=\"progress\"\r\n                  style={{ width: `${calculateProgress(goal)}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No goals set yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoalsForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}