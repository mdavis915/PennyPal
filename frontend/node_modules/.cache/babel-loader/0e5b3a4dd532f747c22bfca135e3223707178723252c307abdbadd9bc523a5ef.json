{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marid\\\\Downloads\\\\CIS4905\\\\piggy-bank\\\\frontend\\\\src\\\\components\\\\Deposit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionForm({\n  fetchGoals\n}) {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n  const [isDeposit, setIsDeposit] = useState(true); // Toggle between deposit/withdraw\n  const [goals, setGoals] = useState([]); // Goals state\n  const [selectedGoal, setSelectedGoal] = useState(\"\"); // Selected goal state\n  const [error, setError] = useState(\"\"); // Error message state\n\n  // Fetch goals when the component mounts\n  useEffect(() => {\n    const fetchGoals = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/goals\");\n        if (!response.ok) throw new Error(\"Failed to fetch goals\");\n        const data = await response.json();\n        setGoals(data);\n      } catch (error) {\n        console.error(\"Error fetching goals:\", error);\n      }\n    };\n    fetchGoals();\n  }, []);\n  const handleTransaction = async () => {\n    if (isDeposit && (!selectedGoal || amount <= 0)) {\n      setError(\"Please select a goal and enter a valid amount.\");\n      return;\n    }\n    const transaction = {\n      amount: isDeposit ? parseFloat(amount) : -parseFloat(amount),\n      // Negative for withdrawals\n      note,\n      goal_id: isDeposit ? selectedGoal : null // Include goal ID for deposits\n    };\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/add-transaction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(transaction)\n      });\n      if (response.ok) {\n        // Update current progress in the goal after a deposit\n        if (isDeposit) {\n          const updateResponse = await fetch(`http://127.0.0.1:5000/update-goal-progress`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              goalId: selectedGoal,\n              amount: parseFloat(amount) // Amount deposited\n            })\n          });\n          if (!updateResponse.ok) {\n            const errorData = await updateResponse.json();\n            setError(`Failed to update goal progress: ${errorData.error}`);\n            return;\n          }\n        }\n        alert(`${isDeposit ? \"Deposit\" : \"Withdrawal\"} Successful!`);\n        setAmount(\"\");\n        setNote(\"\");\n        setSelectedGoal(\"\"); // Reset selected goal\n        setError(\"\"); // Clear any error messages\n        fetchGoals(); // Refresh goals to show updated progress\n      } else {\n        alert(`${isDeposit ? \"Deposit\" : \"Withdrawal\"} Failed`);\n      }\n    } catch (error) {\n      console.error(\"Error during transaction:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isDeposit ? \"Enter an amount to deposit\" : \"Enter an amount to withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: isDeposit ? \"active\" : \"\",\n        onClick: () => setIsDeposit(true),\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: !isDeposit ? \"active\" : \"\",\n        onClick: () => setIsDeposit(false),\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), isDeposit && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedGoal,\n        onChange: e => setSelectedGoal(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), goals.map(goal => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: goal.id,\n          children: goal.goal_name\n        }, goal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"currency-symbol\",\n        children: \"$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"0.00\",\n        value: amount,\n        onChange: e => {\n          setAmount(e.target.value);\n          setError(\"\"); // Clear error message on input change\n        },\n        className: \"transaction-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a note (optional)\",\n        value: note,\n        onChange: e => setNote(e.target.value),\n        className: \"transaction-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTransaction,\n      className: isDeposit ? \"deposit-button\" : \"withdraw-button\",\n      children: isDeposit ? \"Deposit\" : \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionForm, \"jtM4hQTf8wSmM4ZreeT91qTDFuY=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionForm","fetchGoals","_s","amount","setAmount","note","setNote","isDeposit","setIsDeposit","goals","setGoals","selectedGoal","setSelectedGoal","error","setError","response","fetch","ok","Error","data","json","console","handleTransaction","transaction","parseFloat","goal_id","method","headers","body","JSON","stringify","updateResponse","goalId","errorData","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","disabled","map","goal","id","goal_name","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/marid/Downloads/CIS4905/piggy-bank/frontend/src/components/Deposit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction TransactionForm({ fetchGoals }) {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [isDeposit, setIsDeposit] = useState(true); // Toggle between deposit/withdraw\r\n  const [goals, setGoals] = useState([]); // Goals state\r\n  const [selectedGoal, setSelectedGoal] = useState(\"\"); // Selected goal state\r\n  const [error, setError] = useState(\"\"); // Error message state\r\n\r\n  // Fetch goals when the component mounts\r\n  useEffect(() => {\r\n    const fetchGoals = async () => {\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:5000/goals\");\r\n        if (!response.ok) throw new Error(\"Failed to fetch goals\");\r\n        const data = await response.json();\r\n        setGoals(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching goals:\", error);\r\n      }\r\n    };\r\n    fetchGoals();\r\n  }, []);\r\n\r\nconst handleTransaction = async () => {\r\n    if (isDeposit && (!selectedGoal || amount <= 0)) {\r\n        setError(\"Please select a goal and enter a valid amount.\");\r\n        return;\r\n    }\r\n\r\n    const transaction = {\r\n        amount: isDeposit ? parseFloat(amount) : -parseFloat(amount), // Negative for withdrawals\r\n        note,\r\n        goal_id: isDeposit ? selectedGoal : null, // Include goal ID for deposits\r\n    };\r\n\r\n    try {\r\n        const response = await fetch(\"http://127.0.0.1:5000/add-transaction\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(transaction),\r\n        });\r\n\r\n        if (response.ok) {\r\n            // Update current progress in the goal after a deposit\r\n            if (isDeposit) {\r\n                const updateResponse = await fetch(`http://127.0.0.1:5000/update-goal-progress`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                        goalId: selectedGoal,\r\n                        amount: parseFloat(amount), // Amount deposited\r\n                    }),\r\n                });\r\n\r\n                if (!updateResponse.ok) {\r\n                    const errorData = await updateResponse.json();\r\n                    setError(`Failed to update goal progress: ${errorData.error}`);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            alert(`${isDeposit ? \"Deposit\" : \"Withdrawal\"} Successful!`);\r\n            setAmount(\"\");\r\n            setNote(\"\");\r\n            setSelectedGoal(\"\"); // Reset selected goal\r\n            setError(\"\"); // Clear any error messages\r\n            fetchGoals(); // Refresh goals to show updated progress\r\n        } else {\r\n            alert(`${isDeposit ? \"Deposit\" : \"Withdrawal\"} Failed`);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error during transaction:\", error);\r\n    }\r\n};\r\n\r\n  return (\r\n    <div className=\"transaction-container\">\r\n      <h2>{isDeposit ? \"Enter an amount to deposit\" : \"Enter an amount to withdraw\"}</h2>\r\n\r\n      {/* Toggle Buttons */}\r\n      <div className=\"toggle-buttons\">\r\n        <button className={isDeposit ? \"active\" : \"\"} onClick={() => setIsDeposit(true)}>Deposit</button>\r\n        <button className={!isDeposit ? \"active\" : \"\"} onClick={() => setIsDeposit(false)}>Withdraw</button>\r\n      </div>\r\n\r\n      {/* Goal Selection */}\r\n      {isDeposit && (\r\n        <div className=\"input-group\">\r\n          <select\r\n            value={selectedGoal}\r\n            onChange={(e) => setSelectedGoal(e.target.value)}\r\n          >\r\n            <option value=\"\" disabled>Select a Goal</option>\r\n            {goals.map((goal) => (\r\n              <option key={goal.id} value={goal.id}>{goal.goal_name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      {/* Amount Input */}\r\n      <div className=\"input-group\">\r\n        <span className=\"currency-symbol\">$</span>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"0.00\"\r\n          value={amount}\r\n          onChange={(e) => {\r\n            setAmount(e.target.value);\r\n            setError(\"\"); // Clear error message on input change\r\n          }}\r\n          className=\"transaction-input\"\r\n        />\r\n      </div>\r\n\r\n      {/* Note Input */}\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a note (optional)\"\r\n          value={note}\r\n          onChange={(e) => setNote(e.target.value)}\r\n          className=\"transaction-input\"\r\n        />\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <button onClick={handleTransaction} className={isDeposit ? \"deposit-button\" : \"withdraw-button\"}>\r\n        {isDeposit ? \"Deposit\" : \"Withdraw\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}