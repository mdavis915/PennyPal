{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marid\\\\Downloads\\\\CIS4905\\\\piggy-bank\\\\frontend\\\\src\\\\components\\\\AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login and register\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const endpoint = isLogin ? \"/login\" : \"/register\";\n    const response = await fetch(`http://127.0.0.1:5000${endpoint}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    if (data.token) {\n      localStorage.setItem(\"token\", data.token); // Store the JWT token\n      navigate(\"/\");\n    } else {\n      alert(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? \"Login\" : \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [isLogin ? \"Don't have an account?\" : \"Already have an account?\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsLogin(!isLogin),\n        children: isLogin ? \"Register\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthPage, \"uKQdVWAsNMnx0la4TpDIt7NIKTE=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AuthPage","_s","username","setUsername","password","setPassword","isLogin","setIsLogin","navigate","handleSubmit","e","preventDefault","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","token","localStorage","setItem","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marid/Downloads/CIS4905/piggy-bank/frontend/src/components/AuthPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction AuthPage() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLogin, setIsLogin] = useState(true); // Toggle between login and register\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const endpoint = isLogin ? \"/login\" : \"/register\";\r\n  \r\n    const response = await fetch(`http://127.0.0.1:5000${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n  \r\n    const data = await response.json();\r\n  \r\n    if (data.token) {\r\n      localStorage.setItem(\"token\", data.token); // Store the JWT token\r\n      navigate(\"/\");\r\n    } else {\r\n      alert(data.message);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <h1>{isLogin ? \"Login\" : \"Register\"}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">{isLogin ? \"Login\" : \"Register\"}</button>\r\n      </form>\r\n      <p>\r\n        {isLogin ? \"Don't have an account?\" : \"Already have an account?\"}\r\n        <button onClick={() => setIsLogin(!isLogin)}>\r\n          {isLogin ? \"Register\" : \"Login\"}\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}