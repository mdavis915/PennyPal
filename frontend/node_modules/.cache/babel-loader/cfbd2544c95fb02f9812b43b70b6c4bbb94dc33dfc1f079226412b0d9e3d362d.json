{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marid\\\\Downloads\\\\CIS4905\\\\piggy-bank\\\\frontend\\\\src\\\\components\\\\Goals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GoalsForm() {\n  _s();\n  const [goalName, setGoalName] = useState(\"\");\n  const [goalAmount, setGoalAmount] = useState(\"\");\n  const [goals, setGoals] = useState([]); // Local state for storing fetched goals\n\n  // Function to fetch goals from the server\n  const fetchGoals = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/goals\");\n      if (!response.ok) throw new Error(\"Failed to fetch goals\");\n      const data = await response.json();\n      setGoals(data); // Update state with the fetched goals\n    } catch (error) {\n      console.error(\"Error fetching goals:\", error);\n    }\n  };\n\n  // Fetch goals on component mount\n  useEffect(() => {\n    fetchGoals();\n  }, []);\n\n  // Function to create a new goal\n  const handleCreateGoal = async () => {\n    if (!goalName || !goalAmount) {\n      alert(\"Please enter both goal name and amount.\");\n      return;\n    }\n    const newGoal = {\n      goal_name: goalName,\n      goal_amount: parseFloat(goalAmount)\n    };\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/set-goal\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newGoal)\n      });\n      if (response.ok) {\n        alert(\"Goal created successfully!\");\n        setGoalName(\"\");\n        setGoalAmount(\"\");\n        fetchGoals(); // Refresh goal list after adding a new goal\n      } else {\n        alert(\"Failed to create goal.\");\n      }\n    } catch (error) {\n      console.error(\"Error creating goal:\", error);\n    }\n  };\n\n  // Function to calculate the progress of each goal\n  const calculateProgress = (savedAmount, goalAmount) => {\n    return savedAmount / goalAmount * 100;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container goal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Goal Name\",\n        value: goalName,\n        onChange: e => setGoalName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        placeholder: \"Goal Amount\",\n        value: goalAmount,\n        onChange: e => setGoalAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateGoal,\n      className: \"btn btn-primary\",\n      children: \"Set Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goals-list\",\n      children: goals.length > 0 ? goals.map((goal, index) => {\n        // Calculate the progress percentage\n        const progress = calculateProgress(goal.saved_amount, goal.goal_amount);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: goal.goal_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Goal: $\", goal.goal_amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Saved: $\", goal.saved_amount || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                role: \"progressbar\",\n                style: {\n                  width: `${Math.min(progress, 100)}%`\n                },\n                \"aria-valuenow\": Math.min(progress, 100),\n                \"aria-valuemin\": \"0\",\n                \"aria-valuemax\": \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: [Math.min(progress, 100).toFixed(2), \"% completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No goals set yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(GoalsForm, \"cHCgY1uxmVYZ0hK7K7+cloxJSmk=\");\n_c = GoalsForm;\nexport default GoalsForm;\nvar _c;\n$RefreshReg$(_c, \"GoalsForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GoalsForm","_s","goalName","setGoalName","goalAmount","setGoalAmount","goals","setGoals","fetchGoals","response","fetch","ok","Error","data","json","error","console","handleCreateGoal","alert","newGoal","goal_name","goal_amount","parseFloat","method","headers","body","JSON","stringify","calculateProgress","savedAmount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","goal","index","progress","saved_amount","role","style","width","Math","min","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/marid/Downloads/CIS4905/piggy-bank/frontend/src/components/Goals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap CSS\r\n\r\nfunction GoalsForm() {\r\n  const [goalName, setGoalName] = useState(\"\");\r\n  const [goalAmount, setGoalAmount] = useState(\"\");\r\n  const [goals, setGoals] = useState([]); // Local state for storing fetched goals\r\n\r\n  // Function to fetch goals from the server\r\n  const fetchGoals = async () => {\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/goals\");\r\n      if (!response.ok) throw new Error(\"Failed to fetch goals\");\r\n\r\n      const data = await response.json();\r\n      setGoals(data); // Update state with the fetched goals\r\n    } catch (error) {\r\n      console.error(\"Error fetching goals:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch goals on component mount\r\n  useEffect(() => {\r\n    fetchGoals();\r\n  }, []);\r\n\r\n  // Function to create a new goal\r\n  const handleCreateGoal = async () => {\r\n    if (!goalName || !goalAmount) {\r\n      alert(\"Please enter both goal name and amount.\");\r\n      return;\r\n    }\r\n\r\n    const newGoal = {\r\n      goal_name: goalName,\r\n      goal_amount: parseFloat(goalAmount),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/set-goal\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(newGoal),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Goal created successfully!\");\r\n        setGoalName(\"\");\r\n        setGoalAmount(\"\");\r\n        fetchGoals(); // Refresh goal list after adding a new goal\r\n      } else {\r\n        alert(\"Failed to create goal.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating goal:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to calculate the progress of each goal\r\n  const calculateProgress = (savedAmount, goalAmount) => {\r\n    return (savedAmount / goalAmount) * 100;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container goal-container\">\r\n      <h2>Create a New Goal</h2>\r\n\r\n      {/* Goal Name Input */}\r\n      <div className=\"mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Goal Name\"\r\n          value={goalName}\r\n          onChange={(e) => setGoalName(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Goal Amount Input */}\r\n      <div className=\"mb-3\">\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Goal Amount\"\r\n          value={goalAmount}\r\n          onChange={(e) => setGoalAmount(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <button onClick={handleCreateGoal} className=\"btn btn-primary\">\r\n        Set Goal\r\n      </button>\r\n\r\n      {/* Display Goals List */}\r\n      <h3>My Goals</h3>\r\n      <div className=\"goals-list\">\r\n        {goals.length > 0 ? (\r\n          goals.map((goal, index) => {\r\n            // Calculate the progress percentage\r\n            const progress = calculateProgress(goal.saved_amount, goal.goal_amount);\r\n\r\n            return (\r\n              <div className=\"card mb-4\" key={index}>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{goal.goal_name}</h5>\r\n                  <p className=\"card-text\">Goal: ${goal.goal_amount}</p>\r\n                  <p className=\"card-text\">Saved: ${goal.saved_amount || 0}</p>\r\n\r\n                  {/* Bootstrap Progress Bar */}\r\n                  <div className=\"progress\">\r\n                    <div\r\n                      className=\"progress-bar\"\r\n                      role=\"progressbar\"\r\n                      style={{ width: `${Math.min(progress, 100)}%` }}\r\n                      aria-valuenow={Math.min(progress, 100)}\r\n                      aria-valuemin=\"0\"\r\n                      aria-valuemax=\"100\"\r\n                    ></div>\r\n                  </div>\r\n                  <small className=\"text-muted\">{Math.min(progress, 100).toFixed(2)}% completed</small>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No goals set yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoalsForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}